---
import { SITE_AUTHOR, SITE_TITLE } from '../consts'
import { type Language, LANGUAGES } from '../lib/language'
import { Post } from '../lib/posts'
import PostExcerptForMeta from './fragments/PostExcerptForMeta.astro'
import { getPosts } from 'src/lib/posts'
import { localizedHTML as favicons } from 'astro-favicons/middleware'

type Props = {
  fullTitle: string
  language: Language
  post: Post | undefined
}

const { fullTitle, language, post } = Astro.props
const { pathname, host } = Astro.url

const rendered = await post?.collectionEntry.render()

const posts = await getPosts()
const firstPostYear = posts[posts.length - 1]!.date.getFullYear()
---

<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta
  http-equiv="Referrer-Policy"
  content="no-referrer, strict-origin-when-cross-origin"
/>
<meta
  name="viewport"
  content="width=device-width,initial-scale=1,shrink-to-fit=no"
/>
<meta name="renderer" content="webkit|ie-comp|ie-stand" />
<meta name="imagemode" content="force" />
<meta name="nightmode" content="disable" />
<meta name="wap-font-scale" content="no" />

<title>{fullTitle}</title>
<meta name="title" content={fullTitle} />
<meta name="keywords" content="" />
<meta name="author" content={SITE_AUTHOR} />

<link rel="canonical" href={Astro.request.url} />
<link
  rel="alternate"
  type="application/rss+xml"
  title={SITE_TITLE}
  href={`https://${host}/rss2.xml`}
/>
<link
  rel="alternate"
  type="application/atom+xml"
  title={SITE_TITLE}
  href={`https://${host}/feed.xml`}
/>

{
  Object.entries(LANGUAGES).map(([_, newLanguage]) => (
    <link
      rel="alternate"
      href={`https://${host}${language.getCanonicalPath(pathname, newLanguage)}`}
      hreflang={newLanguage.getCode()}
    />
  ))
}

<meta
  name="copyright"
  content={`Copyright ${firstPostYear}-${new Date().getFullYear()} ${SITE_TITLE}`}
/>

<Fragment set:html={favicons(Astro.currentLocale)} />

<meta property="og:url" content={Astro.request.url} />
<meta property="og:type" content="website" />
<meta property="og:title" content={fullTitle} />

{
  (post !== undefined && (
    <>
      <meta
        property="og:image"
        content={`https://${host}${post.image ?? '/apple-touch-icon.png'}`}
      />
      <PostExcerptForMeta property="og:description">
        {(rendered?.Content !== undefined && <rendered.Content />) || (
          <p>{post.title}</p>
        )}
      </PostExcerptForMeta>
    </>
  )) || (
    <>
      <meta
        property="og:image"
        content={`https://${host}/apple-touch-icon.png`}
      />
      <meta property="og:description" content={fullTitle} />
    </>
  )
}

<meta property="og:site_name" content={SITE_TITLE} />
<meta property="og:locale" content={language.getCode()} />

<meta name="twitter:card" content="summary" />
<meta name="twitter:url" content={Astro.request.url} />
<meta name="twitter:title" content={fullTitle} />

{
  (post !== undefined && (
    <>
      <meta
        property="twitter:image"
        content={`https://${host}${post.image ?? '/apple-touch-icon.png'}`}
      />
      <PostExcerptForMeta property="twitter:description">
        {(rendered?.Content !== undefined && <rendered.Content />) || (
          <p>{post.title}</p>
        )}
      </PostExcerptForMeta>
    </>
  )) || (
    <>
      <meta
        property="twitter:image"
        content={`https://${host}/apple-touch-icon.png`}
      />
      <meta property="twitter:description" content={fullTitle} />
    </>
  )
}

<meta name="twitter:dnt" content="on" />

<meta itemprop="name" content={fullTitle} />

{
  (post !== undefined && (
    <>
      Z
      <meta
        property="image"
        content={`https://${host}${post.image ?? '/apple-touch-icon.png'}`}
      />
      <PostExcerptForMeta name="description">
        {(rendered?.Content !== undefined && <rendered.Content />) || (
          <p>{post.title}</p>
        )}
      </PostExcerptForMeta>
      <PostExcerptForMeta property="description">
        {(rendered?.Content !== undefined && <rendered.Content />) || (
          <p>{post.title}</p>
        )}
      </PostExcerptForMeta>
    </>
  )) || (
    <>
      <meta property="image" content={`https://${host}/apple-touch-icon.png`} />
      <meta name="description" content={fullTitle} />
      <meta property="description" content={fullTitle} />
    </>
  )
}

<link rel="me" href="https://mastodon.social/@lantian" />

<script is:inline>
  ;(() => {
    try {
      const mode = localStorage.getItem('user-color-scheme')
      if (mode == 'dark' || mode == 'light') {
        document.documentElement.setAttribute('data-user-color-scheme', mode)
      }
    } catch (e) {}
  })()
</script>
