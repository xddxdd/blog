kind: secret
name: netrc
get:
  path: git-netrc
  name: git-netrc

---

kind: secret
name: tg_token
get:
  path: telegram-token
  name: telegram-token

---

kind: secret
name: tg_target
get:
  path: telegram-target
  name: telegram-target

---

kind: pipeline
type: docker
name: default

trigger:
  branch:
  - master

steps:
  - name: restore cache
    image: meltwater/drone-cache:dev
    settings:
      backend: "filesystem"
      restore: true
      cache_key: "volume"
      archive_format: "gzip"
      filesystem_cache_root: "/cache"
      mount:
        - 'node_modules'
        - 'img_cache'
    volumes:
      - name: cache
        path: /cache

  - name: npm run build
    image: node:20-alpine
    commands:
      - apk add --no-cache build-base git gzip brotli zstd parallel rsync imagemagick vips-dev python3
      - npm run build

  - name: build web-compressor
    image: rust:alpine
    commands:
      - apk add --no-cache build-base git cmake
      - git clone https://github.com/xddxdd/web-compressor.git
      - cd web-compressor
      - cargo build --release

  - name: hexo deploy
    image: node:20-alpine
    environment:
      NETRC:
        from_secret: netrc
    commands:
      - apk add --no-cache build-base git gzip brotli zstd parallel rsync imagemagick vips-dev python3

      # Set git logins
      - echo $NETRC > ~/.netrc

      # Compress to gzip
      - web-compressor/target/release/web-compressor --target dist/
      # Convert to webp
      - npm run webp

      # Run deploy
      - mkdir -p /sync/www/lantian.pub
      - rsync -avr --delete-after dist/ /sync/www/lantian.pub/
    when:
      event:
        exclude:
        - pull_request
    volumes:
      - name: sync
        path: /sync

  - name: rebuild cache
    image: meltwater/drone-cache:dev
    failure: ignore
    settings:
      backend: "filesystem"
      rebuild: true
      cache_key: "volume"
      archive_format: "gzip"
      filesystem_cache_root: "/cache"
      mount:
        - 'node_modules'
        - 'img_cache'
    volumes:
      - name: cache
        path: /cache

  - name: telegram notification for failure
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: tg_token
      to:
        from_secret: tg_target
    when:
      status:
        - failure

  - name: telegram notification for success
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: tg_token
      to:
        from_secret: tg_target
    when:
      branch:
        - master
      status:
        - success
      event:
        exclude:
          - cron

volumes:
  - name: cache
    host:
      path: /cache
  - name: sync
    host:
      path: /sync
